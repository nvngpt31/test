#!/bin/bash

  # Description:
  # A simple script to check if something is or is not 

 while (( "$#" ))
  do case $1 in
       -s|--server) shift && server="$1" ;;
     esac
     shift
  done

  if [[ -z $server ]]
  then echo "... Please provide server name with -s or --server"
       exit 1
  fi   

  source /etc/puppetlabs/code/ucm/conf/setup.properties
  source /etc/environment
  PATH=$NEWPATH

  # ----------------------------------------------------------------------------
  dns_domains='clientsys.local associatesys.local iteclientsys.local pteassociatesys.local'
  dns_domains_aux='clientaux.local associateaux.local npeclientaux.local npeassociateaux.local'
  msg_server_not_defined='... Please provide server name with -s or --server'
  timestamp="`date +"%Y-%m-%d %T"`"
  sshopts='StrictHostKeyChecking=no'
  key='/root/sudossh.privkey'
  saltmaster='prdtxlvpptapp03.associatesys.local'
  logdir="$dir_log_parent" # From sourced properties file
  logsalt="${logdir}/salt-heartbeats"
  logname="visibility.log"
  log="${logdir}/${logname}" 
  
  # ----------------------------------------------------------------------------
  host_valid () {
    node=$1
    host $node > /dev/null 2>&1
  } 

  host_get_fqdn () {
    node_get_domain=$1
    host $node_get_domain | awk '{print $1}'
  } 

  fn_in_dns () {
    node_dnscheck=$1
    state_dns='unknown_dns_state'
    host_valid $node_dnscheck
    if [[ $? != '0' ]] 
    then state_dns="is_not_in_dns"
    else state_dns="is_in_dns"
    fi 
  } 

  fn_fqdn_check () {
    node_fqdn_check="$1"
    if [[ $state_dns = "is_in_dns" ]] 
    then domaincheck="`echo $node_fqdn_check | awk -F '.' '{print $2}'`"
         if [[ -z $domaincheck ]] 
         then server="`host_get_fqdn $node_fqdn_check`"
         fi 
    fi
  } 

  fn_is_in_ucm_foreman () {
    node_isucm=$1
    if [[ $state_dns = "is_in_dns" ]]
    then /usr/local/bin/ucm-nodecheck -s $node_isucm >/dev/null 2>&1
         if [[ $? = '0' ]]
         then state_is_ucm='is_in_ucm_foreman'
         else state_is_ucm='is_not_in_ucm_foreman'
         fi
    else state_is_ucm="unknown_ucm_foreman_state"
    fi
  }

  fn_check_legacy_foreman () {
    node_leg_fman_check="$1"
    jump="${legacy_puppet_jump_server}" # FROM PROPERTIES FILE

    if [[ $state_dns = "is_in_dns" ]] 
    then ssh -q $jump "/usr/local/bin/ucm-legacy-foreman-hostcheck -n $node_leg_fman_check"
         if [[ $? = '0' ]] 
         then state_legacy_foreman='is_in_legacy_foreman'
         else state_legacy_foreman='is_not_in_legacy_foreman'
         fi 
    else state_legacy_foreman='unknown_legacy_foreman_state'
    fi

  }

  fn_cmdb () {
    node_cmdb=$1
    param='AssetLifecycleStatus_Enum'
    cmd='/usr/local/bin/cmdb-server-query'
    jump="${legacy_puppet_jump_server}" # FROM PROPERTIES FILE

    if [[ $state_dns = "is_in_dns" ]]
    then ssh -q $jump "$cmd -s $node_cmdb | grep $param | grep -vi sort | sed 's/[\",\,]//g' | tr '[:upper:]' '[:lower:]' | awk '{print $NF}'" | grep -q deployed

         if [[ $? = '0' ]]
         then state_cmdb='is_in_cmdb'
         else state_cmdb='is_not_in_cmdb'
         fi

         if [[ $state_cmdb = 'is_in_cmdb' ]]
         then state_cmdb_active='is_cmdb_active'
         else state_cmdb_active='unknown_if_cmdb_active'
         fi

    else state_cmdb='unknown_cmdb_state'
         state_cmdb_active='unknown_if_cmdb_active'
    fi
  }
   
  fn_salt_hb () {
    node_salthb=$1
    # ONLY WORK IF THE NODE IS FOUND IN DNS
    if [[ $state_dns = "is_in_dns" ]] 
    then last_salt_log="`ls -1tr $logsalt | tail -1`"
         latest_salt_log="${logsalt}/${last_salt_log}"
         # CHECK IF NODE IS IN THE LAST SALT HEART BEAT LOG
         grep -q $node_salthb $latest_salt_log
         if [[ $? = '0' ]] # SET WHETHER OR NOT THE NODE WAS FOUND
         then node_in_salt_log='true' 
         else node_in_salt_log='false'
         fi

         if [[ $node_in_salt_log = 'true' ]]
         then 

           saltgood="`grep $node_salthb $latest_salt_log | tr '[:upper:]' '[:lower:]' | awk '{print $NF}'`" 
           saltbad="`grep $node_salthb $latest_salt_log | tr '[:upper:]' '[:lower:]' | awk -F "[" '{print $NF}' | sed 's \]  g ; s/ /_/g'`"
           saltbad_msg="is_salt_${saltbad}"

           if [[ $saltgood = 'true' ]] 
           then state_salt='is_salt_healthy' # IF VAR ABOVE SALT STATE = TRUE THEN WE'RE GOOD
           else state_salt="${saltbad_msg}"  # IF VAR ABOVE SALT STATE DOES NOT = TRUE THE WE'RE BAD AND REPORT STATE FROM LOG ALSO SET VAR SALTBADMS ABOVE
           fi 

         fi  
  
         if [[ $node_in_salt_log = 'false' ]] # IF THE NODE IS NOT FOUND IN THE LOG FOR WHAT EVER REASON THEN STATE IS UNKNONW
         then state_salt='unknown_salt_state'
         fi  
         

    else state_salt='unknown_salt_state' # RESULT OF BAD DNS STATE
    fi 
  }

  fn_agg () {
  
    echo "ucm-visibility node = $server :${state_dns}:${state_cmdb}:${state_cmdb_active}:${state_legacy_foreman}:${state_is_ucm}:${state_salt}" 
  
  }

  # ----------------------------------------------------------------------------
  # NOTE THAT IF SEREVR IS NOT IN DNS MOST OTHER VARIABLES WILL BE "UNKNOWN"

  fn_in_dns $server               # CHECK IF IN DNS
  fn_fqdn_check $server           # IN DNS, IF NOT FQDN, RESET SERVER VAR TO = FQDN
  fn_cmdb $server                 # IF IN CMDB AND IF IS DEPLOYED
  fn_is_in_ucm_foreman $server    # CHECK IF NODE IS IN UCM FOREMAN 
  fn_check_legacy_foreman $server # CHECK IF IN LEGACY FOREMAN
  fn_salt_hb $server              # CHECK IF IS SALT PINGABLE
  fn_agg | tee -a ${log}          # OUTPUT TO LOG ON SINGLE LINE

