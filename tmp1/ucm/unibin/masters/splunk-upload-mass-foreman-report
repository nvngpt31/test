#!/bin/bash

  source /etc/environment
  PATH=$NEWPATH

  # -------------------------------------------------------------------------------
  while (( "$#" ))
  do case $1 in
       -f|--file) shift && file="$1"  ;;
     esac
     shift
  done

  # -------------------------------------------------------------------------------
  if [[ -z $file ]]
  then echo "... Please provide full path to file with -f or --file"
       exit 1
  fi 

  
  if [[ ! -f $file ]]
  then echo "... File: \"$file\" not found.  Bailing"
       exit 1
  fi 

  # -------------------------------------------------------------------------------
  source /etc/environment
  PATH=$NEWPATH

  me="`hostname`"
  saltmaster="prdtxlvpptapp03"
  if [[ $me != $saltmaster ]] 
  then echo "Must run this script on salt master"
       exit 1
  fi 

  # -------------------------------------------------------------------------------
  parent='/etc/puppetlabs/code/ucm'
  bin="${parent}/git/ucm/unibin"
  cache="${parent}/cache"
  lockdir="${cache}/locks.hec"
  listcopy="${file}.hecuploadlist"
  workingfile="${listcopy}.temp"
  cmd_upload="${bin}/masters/splunk-upload-single-foreman-report"
  proofdir="${cache}/proof"

  rm -rf $proofdir
  mkdir -p $lockdir
  mkdir -p $proofdir

  while mapfile -t -n 50 ary && ((${#ary[@]})) 
  do echo "=========================================================================="
     #servera="${ary[0]}"
     #serverb="${ary[1]}"
     echo ""
     for uploadnode in ${ary[@]} 
     do sh $cmd_upload -s $uploadnode --lock-dir $lockdir --proof-dir $proofdir &>/dev/null &disown
     done
     sleep 12
  done < $file

  #'while lock dir is empty'
  #while ! ls -l $lockdir | grep '.lock' ; do
  #  for node in `cat $workingfile` ; do 
  #    echo "working on server: $node"
  #    sh $cmd_upload -s $node --lock-dir $lockdir --proof-dir $proofdir &>/dev/null &disown
  #  done
  #done



