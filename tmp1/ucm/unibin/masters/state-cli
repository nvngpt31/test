#!/bin/bash

  # --------------------------------------------------------------------
  while (( "$#" ))
  do case $1 in
       -s|--server) shift && server="$1"  ;;
     esac
     shift
  done

  if [[ -z $server ]]
  then echo "... please provide server name with -s or --server <fqdn>"
       exit 1
  fi 

  domain="`echo $server | awk -F '.' '{print 2}'`"
  if [[ -z $domain ]]
  then echo "... whoops, please provide server fqdn."
           exit 1
  fi 

  # --------------------------------------------------------------------
  thisserver="`hostname -f`"
  adminserver='prdctlsulsegw04.associatesys.local'
  dir_ucm='/ulse/ucm/git/ucm'

  if [[ $adminserver != $thisserver ]]
  then echo "... whoops, must run this script on $adminserver"
       exit 1
  fi 

  # --------------------------------------------------------------------
  sh ${dir_ucm}/bin/global/simple-dns-check -s $server
  if [[ $? = '0' ]] 
  then in_dns='in_dns_true' 
  else in_dns='in_dns_false'
  fi 

  # --------------------------------------------------------------------
  sh ${dir_ucm}/bin/inventory-bin/cmdb-cli -s $server --exists
  if [[ $? = '0' ]] 
  then in_cmdb='in_cmdb_true' 
  else in_cmdb='in_cmdb_false'
  fi 
  
  # --------------------------------------------------------------------
  sh ${dir_ucm}/bin/inventory-bin/cmdb-cli -s $server --is_deployed
  if [[ $? = '0' ]]
  then is_deployed='is_deployed_true'
  else is_deployed='is_deployed_false'
  fi

  # --------------------------------------------------------------------
  /usr/local/bin/ucm-nodecheck -s $server >/dev/null 2>&1
  if [[ $? = '0' ]]
  then in_ucm='in_ucm_true'
  else in_ucm='in_ucm_false'
  fi

  # --------------------------------------------------------------------
  ${dir_ucm}/foreman-api/legacy/legacy-hostcheck $server | grep '"certname":' >/dev/null 2>&1
  if [[ $? = '0' ]]
  then in_legacyforeman='in_legacyforeman_true'
  else in_legacyforeman='in_legacyforeman_false'
  fi

  # --------------------------------------------------------------------
  /usr/local/bin/pingable $server >/dev/null 2>&1
  if [[ $? = '0' ]]
  then is_pingable='is_pingable_true'
  else is_pingable='is_pingable_false'
  fi

  # --------------------------------------------------------------------
  echo "server $server :: $in_dns :: $in_cmdb :: $is_deployed :: $in_ucm :: $in_legacyforeman :: $is_pingable"
