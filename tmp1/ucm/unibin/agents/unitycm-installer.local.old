#!/bin/bash

  # ================================================================= 
  line='------------------------------------------------------------'
  hdr="UCM:"
  
  # THIS SCRIPT ASSUMES THE BUILDSERVER IS CORRECT
  # BTW, DEST IS SHORT FOR DESTINATION
  # BTW, FMT IS SHORT FOR FORMAT
  source /etc/tda/env
  #fqdn="`hostname -f`"
  sname="`uname -n`"
  fqdn="`host $sname | awk '{print $1}'`"
  moddir="/etc/puppetlabs/code/environments/production/modules/"
  url="http://$BUILDSERVER"
  path_repomucm="nonpackaged/ucm"
  url_p5='https://yum.puppetlabs.com/puppet5'
  dirssl='/etc/puppetlabs/puppet/ssl'

  # PUPPET CONF STUFF FOR GET FUNCTION
  p5conf="${path_repomucm}/p5-pconf"
  puppetconf="/etc/puppetlabs/puppet/puppet.conf"
  destucm='/usr/local/bin/ucm'
  grabucm="${path_repomucm}/ucm"

  pkgs_install='
    puppet-agent
    salt'

  pkgs_del='
    puppet
    facter
    mcollective'
  
  dirs_nuke='
    /etc/puppetlabs
    /opt/puppet/
    /etc/facter'

  bakdir='/root/puppet/backup'

  if grep -q 7 /etc/redhat-release 
  then elver=7 
  else elver=6 
  fi 

  case $elver in
    '6') p5reporpm='puppet5-release-el-6.noarch.rpm' ;;
    '7') p5reporpm='puppet5-release-el-7.noarch.rpm' ;;
  esac

  case $elver in
    '6') ppkg='puppet-agent-5.4.0-1.el6.x86_64.rpm' ;;
    '7') ppkg='puppet-agent-5.4.0-1.el7.x86_64.rpm' ;;
  esac

  # ================================================================= 
  fmt () {
    echo ""
  } 

  fmttop () {
    echo "$line"
  }

  fmtdouble () {
    echo "" ; echo "" 
  } 

  fnget () {
    fmt
    path=$1 dest=$2
    wget ${url}/${path} -O $dest
    fmt
  }

  fnbk () {
    fmttop ; fmt
    if [[ ! -d $bakdir ]] 
    then echo "$hdr ... BACKING STUFF UP" 
	 mkdir -p $bakdir 
         for dir in $dirs_nuke ; do 
	     mv ${dir} ${bakdir}/ 
         done
    else echo "$hdr ... ALREADY BACKED UP, MOVING ON."
    fi
    fmt
  }

  fnrmdir () {
    echo "hold"
  }

  fnyuminstall () {
    pkg=$1
    fmt
    fmttop 
    echo "$hdr ... INSTALLING PACKAGE $pkg"
    yum install -y $pkg
    fmt
  }

  fnyumremove () {
    pkg=$1
    fmt
    fmttop 
    echo "$hdr ... REMOVING PACKAGE $pkg"
    yum remove -y $pkg
    fmt
  }

  #fnyummkcache () {
  #  fmt
  #  fmttop 
  #  echo "$hdr ... MAKE THAT CACHE"
  #  echo "$hdr ... PLEASE WAIT ..."
  #  yum clean all && yum makecache > /dev/null 2>&1
  #  fmt
  #}

  fn_plabs_p5 () {
    fmt
    fmttop 
    # echo "$hdr ... SETTING UP PUPPET REPOS EXTERNALLY"
    # fmt ; rpm -Uvh ${url_p5}/${p5reporpm} ; fmt
    #wget http://${BUILDSERVER}/nonpackaged/ucm/${ppkg} -O /root/${ppkg}
    #if [[ $? != '0' ]] 
    #then echo "$hdr ... COULD NOT GRAB PUPPET RPM LOCALLY, BAILING."
    #     exit 1
    #fi 

    cd /root/unitycm-installer-local
    yum localinstall -y ${ppkg}

  }

  mkfact () {
    fmt
    fmttop 
    name="$1"
    value="$2"
    echo "$hdr ... CREATING FACT \"${name}\" WITH VALUE \"${value}\" "
    mkdir -p /etc/facter/facts.d
    echo "${name}=${value}" > /etc/facter/facts.d/${name}.txt
    fmt
  }

  fnpapply () {
    class="$1"
    fmttop 
    echo "$hdr ... RUNNING PUPPET CLASS $class"
    puppet apply -t -e "include ${class}"
    fmt
  }
  
  fnagent () {
    class=$1
    if [[ -z $class ]] 
    then puppet agent -t 
    else puppet agent -t --tags $class
    fi 
  }

  #fncurlrun () {
  #  PATHTOCMD=$1
  #  fmt
  #  fmttop
  #  echo "$hdr ... RUNNING CURL BASH ON REMOTE SCRIPT $PATHTOCMD"
  #  bash <(curl -s http://${BUILDSERVER}/${PATHTOCMD})
  #  fmt
  #}

  # ================================================================= 
  clear 

  fmttop
  fmt
  echo "$hdr ... NOW RUNNING UNITY CM INSTALLER"
  fmt


  if [[ -z $BUILDSERVER ]] 
  then echo "$hdr ... NO BUILDSERVER SET IN /ETC/TDA/ENV, PLEASE FIX THIS FILE MANUALLY THEN RERUN SCRIPT."
       exit 1
  fi  
  
  if [[ -f /etc/facter/facts.d/unitycm_installer_ran.txt ]]
  then echo "$hdr ... ALREADY RAN INSTALLER, NOT RUNNING AGAIN. RESET MANUALLY"
  else

    # TESTING FOR YUM CACHING
    #yum clean all > /dev/null 2>&1
    #yum makecache > /dev/null 2>&1 
    #if [[ $? != '0' ]] 
    #then echo "$hdr ... `uname -n` FAILED TO REFRESH YUM.  PLEASE FIX MANUALLY THEN RE RUN SCRIPT"
    #     exit 1
    #else  

      # ==================================================================
      # BACK STUFF UP
      fnbk
      # ==================================================================

      #yum repolist | grep -q add
      #if [[ $? != '0' ]] 
      #then fncurlrun /nonpackaged/yumstuff/add-add-ons 
      #fi 
      
      # ==================================================================
      # REMOVE STUFF
      for package in $pkgs_del ; do
        fnyumremove $package
      done  
      # ==================================================================

      # fnyuminstall git

      # ==================================================================
      fn_plabs_p5
      # ==================================================================

      # fnyummkcache
      # fnyuminstall puppet-agent-5.4.0 

      # ==================================================================
      if [[ ! -d '/opt/puppetlabs/bin/' ]] 
      then echo "$hdr ... PUPPET INSTALLATION APPEARS TO HAVE FAILED, CHECK YUM CONFIG?"
           echo "$hdr ... PLEASE ATTEMPT MANUAL INSTALLATION WITH yum install -y puppet-agent-5.4.0"
           exit 1
      fi  

      for i in `ls -1 /opt/puppetlabs/bin/` ; do 
        cd /usr/local/bin/ && rm -f ${i} 
        cd /usr/local/bin/ && ln -s /opt/puppetlabs/bin/${i} 
      done

      mkfact salt_server prdtxlvpptapp03.associatesys.local
      mkfact salt_manage true 
      # ==================================================================

      #fmt
      #fmttop 
      #echo "$hdr ... GRABBING PUPPET CONF"
      #fnget $p5conf $puppetconf

      # ==================================================================
      fmttop
      echo "$hdr ... UPDATING PUPPET CONF WITH FILE"
      cp /root/unitycm-installer-local/p5-pconf $puppetconf
      sed -i "s/MYFQDN/${fqdn}/g" $puppetconf 
      fmt
      # ==================================================================

      #fmttop
      #echo "$hdr ... GRABBING SALT TAR BALL" 
      #fnget ${path_repomucm}/salt.tar.gz ${moddir}/salt.tar.gz 
      #fmt

      #fmttop
      #echo "$hdr ... UNTARRING SALT TAR BALL" 
      #cd $moddir && tar -xzf salt.tar.gz
      #rm -f salt.tar.gz
      #fmt

      #fmttop
      #fmt
      #fnpapply salt
      #fmt ; fmt

      # ==================================================================
      fmttop
      fmt
      fnagent 
      fmt ; fmt
      
      cp /root/unitycm-installer-local/ucm $destucm
      chmod +x $destucm
      mkfact unitycm_installer_ran true
      # ==================================================================
  fi

  mkfact smeucmtool null
  #fnget $grabucm $destucm
