define ucm::custom::users (
  $user       = $title,
  $uid        = 'null',
  $gid        = 'users',
  $home       = "/home/${user}",
  $shell      = '/bin/bash',
  $comment    = "Puppet Managed System User",
  $ensure     = 'present',
  $bin        = lookup('execpath'),
  $expires    = true,
  $cronaccess = false,
  $adignore   = false,

){

  if $::is_halo == 'true' {

    notify {
      "${user}_denied":
        message => "...MANAGING LOCAL USERS ON HALO MACHINES NOT CURRENTLY ALLOWED, FAIELD TO CONFIGURE ${user}"
    }
  }


  elsif $user == 'nulluser' or $user == 'platform_user' or $user == 'void' {
  }

  else {

    if $adignore == 'true' {
      exec {
        "${user}_ignore":
          path    => "$bin",
          command => "/usr/local/bin/ignoreuser -u $user",
          before  => User["$user"]
      }
    }

    if $uid != 'null' {
      user {
        "$user":
          ensure  => "$ensure",
          uid     => "$uid",
          gid     => "$gid",
          home    => "$home",
          shell   => "$shell",
          comment => "$comment",
       }
     }

     else {
      user {
        "$user":
          ensure  => "$ensure",
          gid     => "$gid",
          home    => "$home",
          shell   => "$shell",
          comment => "$comment",
       }
     }

    exec {
      "${user}_homedir":
        path        => "$bin",
        command     => "mkdir -p $home ; chown $user.$gid $home",
        refreshonly => true,
        subscribe   => User["$user"]
    }

    if $expires != 'true' {
      exec {
        "${user}_password_expiry":
          path      => "$bin",
          command   => "chage -I -1 -m 0 -M -1 -E -1 ${user}",
          unless    => "chage -l $user | grep -i 'password expires' | grep never",
          subscribe => User["$user"]
      }
    }

    if $cronaccess != 'false' {
      exec {
        "${user}_cronallow":
          path      => "$bin",
          command   => "echo ${user} >> /etc/cron.allow",
          unless    => "grep -q $user /etc/cron.allow",
          subscribe => User["$user"]
      }

      exec {
        "${user}_accessconf":
          path      => "$bin",
          command   => "sh /usr/local/bin/ucm-access.conf.setup.sh",
          subscribe => User["$user"]
      }
    }
  }
}

