
# parser.add_argument("-c", "--contains", help="Regex Behavior: Will edit part of string in place.", action="store_true")
# parser.add_argument("-b", "--eartswith", help="Regex Behavior: Will replace entire line after finding match that starts with provided string.", action="store_true")
# parser.add_argument("-e", "--endswith", help="Regex Behavior: Will replace entire line after finding match that ends with provided string.", action="store_true")
# parser.add_argument("-d", "--delete", help="Regex Behavior: Will delete entire line after finding match.", action="store_true")
# parser.add_argument("-x", "--expression", dest="expression", help="Expression or string used to find the given line or part of string in file.", action="store")
# parser.add_argument("", "-eplacewith", dest="replacewith", help="String content used to replace the given line or part of string in file.", action="store")
# parser.add_argument("-f", "--filepath", dest="filepath", help="The file to read and modify", action="store")
  line='-------------------------------------------------------------------------'
  file='./fruits.txt'
  bfile='./fruits.orig.txt'
  echo $line
  cp $bfile $file 
  echo ""
  echo ""
  cat $file 
  echo ""
  echo ""
  echo $line
  ./now -f $file -r 'line' -u 'all' -s 'red' -sh 'strawberry' 
  echo $line
  echo ""
  echo ""
  cat $file 
  echo $line
