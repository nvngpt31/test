---
- name: Get OCP going
  hosts: all
  vars_files:
    - data.yml
  tasks:
    - name: Register at access.redhat.com
      redhat_subscription:
        username: "{{ access_user }}"
        password: "{{ access_pass }}"

    - name: Disable all repositories
      rhsm_repository:
        name: '*'
        state: disabled

    - name: Enable core RHEL repositories
      rhsm_repository:
        name: "{{ item }}"
        state: enabled
      with_items:
        - rhel-7-server-rpms
        - rhel-7-server-extras-rpms
        - rhel-7-server-optional-rpms

    - name: Update all packages
      yum:
        name: '*'

    - name: Make sure bash history is timestamped
      lineinfile:
        path: /etc/bashrc
        state: present
        line: HISTTIMEFORMAT="%F %T "

    - name: Enable OCP repositories
      rhsm_repository:
        name: "{{ item }}"
        state: enabled
      with_items:
        - rhel-7-server-ose-3.9-rpms
        - rhel-7-fast-datapath-rpms
        - rhel-7-server-ansible-2.4-rpms
      when: inventory_hostname in groups["ocp"]

    - name: Install packages related to OCP
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - wget
        - git
        - net-tools
        - bind-utils
        - iptables-services
        - bridge-utils
        - bash-completion
        - kexec-tools
        - sos
        - psacct
        - atomic
        - docker
        - sysstat

    - name: Validate that docker-vg does not exist
      shell: lvs
      register: output_lvs

    - name: Create the thin LVM pool for docker
      shell:
        name: docker-storage-setup
      when: "'docker-pool' in output_lvs.output"

    - name: Create a regular user account for myself
      user:
        name: rgdacosta
        groups: wheel

    - name: Install the sudo configuration which allows passwordless execution of commands as root
      copy:
        src: rgdacosta.sudo
        dest: /etc/sudoers.d/rgdacosta

    - name: Install the ssh key
      authorized_key:
        manage_dir: yes
        user: rgdacosta
        key: "{{ lookup('file', 'id_rsa.pub') }}"

    - name: Lockdown ssh
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: ^.*AllowGroups.*
        line: AllowGroups wheel
      notify:
        - restart_sshd

  handlers:
    - name: restart_sshd
      service:
        name: sshd
        state: restarted

...
