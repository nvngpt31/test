#!/bin/bash

  if [[ `whoami` != 'root' ]]
  then echo "...SORRY, ONLY ROOT IS PERMITTED TO RUN THIS SCRIPT"
       exit 0
  fi

  # NOTES:
  #   FEATURE REQUESTS:
  #     - ADDED LOGGING, SOMETHING LIKE CUSTOM LOG DIR AND ROTATE OUT LOGS OLDER THAN XYZ.

  line='--------------------------------------------------------------------------------------'
  source /etc/tda/env
  fqdn="`hostname -f`" hdr="UCM:" logdir="/var/log/ucm" ucmlog="${logdir}/production.log"
  if [[ `facter is_masterless` = 'true' ]] ; then is_masterless='true' ; fi

  if [[ $is_masterless = 'true' ]] ; then
    masterless_product="`facter product`"
    if [[ -z $masterless_product ]]
    then echo "...WHEN MASTERLESS, PLEASE SET 'product' FACT LOCALLY IN '/etc/facter/facts.d/product.txt' "
         exit 1
    fi
  fi

  fmt () {
    echo ""
  }

  fmttop () {
    echo "$line"
  }

  fmtdouble () {
    echo "" ; echo ""
  }

  lslfacts () {
    # WARNING: DO NOT INCLUDE "_" WITH THE $1 ENTRY
    wildcard=$1
    ls -1 /etc/facter/facts.d/${wildcard}* | awk -F '/' '{print $NF}' | sed 's/.txt//g' | awk -F '_' '{print $NF}'
  }

  rmfact () {
    fact=$1
    if [[ ! -z $fact ]]
    then rm -f /etc/facter/facts.d/${fact}*
    fi
  }

  mkfact () {
    name="$1"
    value="$2"
    # echo "$hdr ... SETTING FACT \"${name}\" WITH VALUE \"${value}\" "
    mkdir -p /etc/facter/facts.d
    echo "${name}=${value}" > /etc/facter/facts.d/${name}.txt
  }

  rotateucm () {
    mkdir -p $logdir
    touch $ucmlog >/dev/null 2>&1
    chmod 0775 $ucmlog
    MaxFileSize="5000000"
    file_size=`du -b $ucmlog | tr -s '\t' ' ' | cut -d' ' -f1`
    if [[ $file_size -gt $MaxFileSize ]] ;then
        timestamp=`date +%s`
        mv $ucmlog ${ucmlog}.${timestamp}
    fi
  }

  fn_runucm () {
  # PRELIMINARY
  mkfact smeucmtool null >/dev/null 2>&1
  mkfact smeucmplatform null >/dev/null 2>&1

  fmt
  if [[ $is_masterless = 'true' ]]
  then puppet apply -t -e 'include ucm::sme::main' ; fmt
  else puppet agent -t --tags ucm_sme_main         ; fmt
  fi

  # TOOLS TIER
  ls -l /etc/facter/facts.d/smeucmtool_* > /dev/null 2>&1
  if [[ $? = '0' ]]
  then for tool in `lslfacts smeucmtool_` 
       do mkfact smeucmtool $tool >/dev/null 2>&1
          smeucmtool=`facter smeucmtool`""
          if [[ $smeucmtool = 'toolnull' ]] 
          then echo "`date` $hdr ... NO TOOLS IN SCOPE OF THIS PRODUCT" #> /dev/null 2>&1 # PLACE HOLDER
          else fmt ; echo "`date` $hdr ... CONFIGURING TOOLS TIER" ; fmttop ; fmt
               if [[ $is_masterless = 'true' ]]
               then puppet apply -t -e 'include ucm::tools'
               else puppet agent -t --tags ucm_tools
               fi
          fi
       done
  else echo "`date` $hdr ... NO TOOLS IN SCOPE OF THIS PRODUCT" # > /dev/null 2>&1 # PLACE HOLDER
  fi

  # PLATFORM TIER
  ls -l /etc/facter/facts.d/smeucmapp_* > /dev/null 2>&1
  if [[ $? = '0' ]]
  then for i in `ls -1 /etc/facter/facts.d/smeucmapp_*`
       do ucmplatform="`echo $i | awk -F 'smeucmplatform_' '{print $2}' | sed 's/.txt//g'`"
          ucmapp="`echo $i      | awk -F 'smeucmapp_' '{print $2}'      | awk -F '_smeucmplatform' '{print $1}'`"
          mkfact smeucmplatform $ucmplatform >/dev/null 2>&1
          mkfact smeucmapp $ucmapp           >/dev/null 2>&1
	  smeucmapp="`facter smeucmapp`"
          if [[ $smeucmapp = 'appnull' ]]
          then echo "`date` $hdr ... NO APPS INSTANCES ON ANY PLATFORMS DEFINED FOR THIS PRODUCT" # > /dev/null 2>&1 # PLACE HOLDER
          else fmt ; echo "`date` $hdr ... CONFIGURING APP $ucmapp ON PLATFORM $ucmplatform" ; fmttop ; fmt
               if [[ $is_masterless = 'true' ]]
               then puppet apply -t -e 'include ucm::platforms'
               else puppet agent -t --tags ucm_platforms
               fi
          fi 
       done
  else echo "`date` $hdr ... NO APPS INSTANCES ON ANY PLATFORMS DEFINED FOR THIS PRODUCT" # > /dev/null 2>&1 # PLACE HOLDER
  fi

  # PRODUCT TIER
  fmt ; echo "`date` $hdr ... CONFIGURING PRODUCT CONFIG" ; fmttop ; fmt

  if [[ $is_masterless = 'true' ]]
  then puppet apply -t -e 'include ucm::product'
  else puppet agent -t --tags ucm_product
  fi

  # POST CONFIG
  rmfact smeucmtool_
  rmfact smeucmapp_
  }

  rotateucm
  fn_runucm | tee -a $ucmlog

